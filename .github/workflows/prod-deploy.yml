# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Production

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["production"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "deploy"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Fetch Schedule
        # set environment variables for schedule update
        env:
          H_URL: http://137.184.205.43:9160
          H_USER: ${{ secrets.hotcrp_user }}
          H_PWD: ${{ secrets.hotcrp_password }}
        # rewrites _data/schedule and commit if there are any changes
        run: |
          # echo '"test": "this is just a test"' > _data/schedule.json
          bash update-schedule.sh
          [ -n "$(git diff HEAD -- _data/schedule.json)" ] \
          && git config user.name github-actions \
          && git config user.email github-actions@github.com \
          && git add _data/schedule.json \
          && git commit -m "update schedule" \
          && git push \
          || true
      - name: Setup Ruby
        uses: ruby/setup-ruby@0a29871fe2b0200a17a4497bae54fe5df0d973aa # v1.115.3
        with:
          ruby-version: '3.0' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v2
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v1

  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.deploy_host }}
          username: ${{ secrets.deploy_user }}
          password: ${{ secrets.deploy_password }}
          port: ${{ secrets.deploy_port }}
          source: "./_site"
          target: "/var/www/html/"
